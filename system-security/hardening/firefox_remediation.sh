#!/usr/bin/env bash
###############################################################################
#
# Bash Remediation Script generated from evaluation of Upstream Firefox STIG
#
# Profile ID: xccdf_org.ssgproject.content_profile_stig
# XCCDF Version:  1.2
#
# Evaluation Start Time:  2022-07-29T15:14:14-07:00
# Evaluation End Time:  2022-07-29T15:14:14-07:00
#
# This file was generated by OpenSCAP 1.3.6 using:
# $ oscap xccdf generate fix --result-id xccdf_org.open-scap_testresult_xccdf_org.ssgproject.content_profile_stig --fix-type bash xccdf-results.xml
#
# This Bash Remediation Script is generated from the results of a profile evaluation.
# It attempts to remediate all issues from the selected rules that failed the test.
#
# How to apply this Bash Remediation Script:
# $ sudo ./remediation-script.sh
#
###############################################################################

###############################################################################
# BEGIN fix (1 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-addons_plugin_updates'
###############################################################################
(>&2 echo "Remediating rule 1/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-addons_plugin_updates'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("extensions.update.enabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("extensions.update.enabled".*/lockPref("extensions.update.enabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("extensions.update.enabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-addons_plugin_updates'

###############################################################################
# BEGIN fix (2 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-auto-download_actions'
###############################################################################
(>&2 echo "Remediating rule 2/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-auto-download_actions'")


firefox_cfg="mozilla.cfg"
value="true"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("browser.helperApps.alwaysAsk.force", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("browser.helperApps.alwaysAsk.force".*/lockPref("browser.helperApps.alwaysAsk.force", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("browser.helperApps.alwaysAsk.force", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-auto-download_actions'

###############################################################################
# BEGIN fix (3 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-autofill_forms'
###############################################################################
(>&2 echo "Remediating rule 3/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-autofill_forms'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("browser.formfill.enable", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("browser.formfill.enable".*/lockPref("browser.formfill.enable", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("browser.formfill.enable", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-autofill_forms'

###############################################################################
# BEGIN fix (4 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-autofill_passwords'
###############################################################################
(>&2 echo "Remediating rule 4/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-autofill_passwords'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("signon.autofillForms", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("signon.autofillForms".*/lockPref("signon.autofillForms", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("signon.autofillForms", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-autofill_passwords'

###############################################################################
# BEGIN fix (5 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-background_data'
###############################################################################
(>&2 echo "Remediating rule 5/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-background_data'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("datareporting.policy.dataSubmissionEnabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("datareporting.policy.dataSubmissionEnabled".*/lockPref("datareporting.policy.dataSubmissionEnabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("datareporting.policy.dataSubmissionEnabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-background_data'

###############################################################################
# BEGIN fix (6 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-cryptomining'
###############################################################################
(>&2 echo "Remediating rule 6/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-cryptomining'")


firefox_cfg="mozilla.cfg"
value="true"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("privacy.trackingprotection.cryptomining.enabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("privacy.trackingprotection.cryptomining.enabled".*/lockPref("privacy.trackingprotection.cryptomining.enabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("privacy.trackingprotection.cryptomining.enabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-cryptomining'

###############################################################################
# BEGIN fix (7 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-development_tools'
###############################################################################
(>&2 echo "Remediating rule 7/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-development_tools'")


firefox_cfg="mozilla.cfg"
value="true"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("devtools.policy.disabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("devtools.policy.disabled".*/lockPref("devtools.policy.disabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("devtools.policy.disabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-development_tools'

###############################################################################
# BEGIN fix (8 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-disable_ssl_weak_ciphers'
###############################################################################
(>&2 echo "Remediating rule 8/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-disable_ssl_weak_ciphers'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("security.ssl3.rsa_des_ede3_sha", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("security.ssl3.rsa_des_ede3_sha".*/lockPref("security.ssl3.rsa_des_ede3_sha", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("security.ssl3.rsa_des_ede3_sha", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-disable_ssl_weak_ciphers'

###############################################################################
# BEGIN fix (9 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-enhanced_tracking'
###############################################################################
(>&2 echo "Remediating rule 9/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-enhanced_tracking'")


firefox_cfg="mozilla.cfg"
value="strict"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("browser.contentblocking.category", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("browser.contentblocking.category".*/lockPref("browser.contentblocking.category", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("browser.contentblocking.category", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-enhanced_tracking'

###############################################################################
# BEGIN fix (10 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-extension_recommendation'
###############################################################################
(>&2 echo "Remediating rule 10/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-extension_recommendation'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("extensions.htmlaboutaddons.recommendations.enabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("extensions.htmlaboutaddons.recommendations.enabled".*/lockPref("extensions.htmlaboutaddons.recommendations.enabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("extensions.htmlaboutaddons.recommendations.enabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-extension_recommendation'

###############################################################################
# BEGIN fix (11 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-fingerprinting-protection'
###############################################################################
(>&2 echo "Remediating rule 11/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-fingerprinting-protection'")


firefox_cfg="mozilla.cfg"
value="true"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("privacy.trackingprotection.fingerprinting.enabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("privacy.trackingprotection.fingerprinting.enabled".*/lockPref("privacy.trackingprotection.fingerprinting.enabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("privacy.trackingprotection.fingerprinting.enabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-fingerprinting-protection'

###############################################################################
# BEGIN fix (12 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-install_extensions'
###############################################################################
(>&2 echo "Remediating rule 12/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-install_extensions'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("xpinstall.enabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("xpinstall.enabled".*/lockPref("xpinstall.enabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("xpinstall.enabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-install_extensions'

###############################################################################
# BEGIN fix (13 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_context_menus'
###############################################################################
(>&2 echo "Remediating rule 13/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_context_menus'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("dom.event.contextmenu.enabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("dom.event.contextmenu.enabled".*/lockPref("dom.event.contextmenu.enabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("dom.event.contextmenu.enabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_context_menus'

###############################################################################
# BEGIN fix (14 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_window_changes'
###############################################################################
(>&2 echo "Remediating rule 14/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_window_changes'")


firefox_cfg="mozilla.cfg"
value="true"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("dom.disable_window_flip", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("dom.disable_window_flip".*/lockPref("dom.disable_window_flip", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("dom.disable_window_flip", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_window_changes'

###############################################################################
# BEGIN fix (15 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_window_resizing'
###############################################################################
(>&2 echo "Remediating rule 15/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_window_resizing'")


firefox_cfg="mozilla.cfg"
value="true"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("dom.disable_window_move_resize", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("dom.disable_window_move_resize".*/lockPref("dom.disable_window_move_resize", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("dom.disable_window_move_resize", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-javascript_window_resizing'

###############################################################################
# BEGIN fix (16 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-open_confirmation'
###############################################################################
(>&2 echo "Remediating rule 16/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-open_confirmation'")

var_required_file_types='application/pdf,application/fdf,application/xfdf,application/lsl,application/lso,application/lss,application/iqy,application/rqy,application/xlk,application/xls,application/xlt,application/pot,application/pps,application/ppt,application/dos,application/dot,application/wks,application/bat,application/ps,application/eps,application/wch,application/wcm,application/wb1,application/wb3,application/rtf,application/doc,application/mdb,application/mde,application/wbk,application/ad,application/adp'



firefox_cfg="mozilla.cfg"
value="\"${var_required_file_types}\""
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("plugin.disable_full_page_plugin_for_types", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's|lockPref("plugin.disable_full_page_plugin_for_types".*|lockPref("plugin.disable_full_page_plugin_for_types", '"$value)"';|g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("plugin.disable_full_page_plugin_for_types", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-open_confirmation'

###############################################################################
# BEGIN fix (17 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-password_store'
###############################################################################
(>&2 echo "Remediating rule 17/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-password_store'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("signon.rememberSignons", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("signon.rememberSignons".*/lockPref("signon.rememberSignons", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("signon.rememberSignons", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-password_store'

###############################################################################
# BEGIN fix (18 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-pop-up_windows'
###############################################################################
(>&2 echo "Remediating rule 18/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-pop-up_windows'")


firefox_cfg="mozilla.cfg"
value="true"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("dom.disable_window_open_feature.status", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("dom.disable_window_open_feature.status".*/lockPref("dom.disable_window_open_feature.status", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("dom.disable_window_open_feature.status", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-pop-up_windows'

###############################################################################
# BEGIN fix (19 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-search_update'
###############################################################################
(>&2 echo "Remediating rule 19/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-search_update'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("browser.search.update", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("browser.search.update".*/lockPref("browser.search.update", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("browser.search.update", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-search_update'

###############################################################################
# BEGIN fix (20 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-shell_protocol'
###############################################################################
(>&2 echo "Remediating rule 20/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-shell_protocol'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("network.protocol-handler.external.shell", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("network.protocol-handler.external.shell".*/lockPref("network.protocol-handler.external.shell", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("network.protocol-handler.external.shell", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-shell_protocol'

###############################################################################
# BEGIN fix (21 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-ssl_protocol_tls'
###############################################################################
(>&2 echo "Remediating rule 21/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-ssl_protocol_tls'")


firefox_cfg="mozilla.cfg"
value="2"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("security.tls.version.min", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("security.tls.version.min".*/lockPref("security.tls.version.min", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("security.tls.version.min", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

firefox_cfg="mozilla.cfg"
value="4"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("security.tls.version.max", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("security.tls.version.max".*/lockPref("security.tls.version.max", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("security.tls.version.max", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-ssl_protocol_tls'

###############################################################################
# BEGIN fix (22 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-telemetry'
###############################################################################
(>&2 echo "Remediating rule 22/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-telemetry'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("toolkit.telemetry.enabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("toolkit.telemetry.enabled".*/lockPref("toolkit.telemetry.enabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("toolkit.telemetry.enabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-telemetry'

###############################################################################
# BEGIN fix (23 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-telemetry-archive'
###############################################################################
(>&2 echo "Remediating rule 23/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-telemetry-archive'")


firefox_cfg="mozilla.cfg"
value="false"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("toolkit.telemetry.archive.enabled", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("toolkit.telemetry.archive.enabled".*/lockPref("toolkit.telemetry.archive.enabled", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("toolkit.telemetry.archive.enabled", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-telemetry-archive'

###############################################################################
# BEGIN fix (24 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-verification'
###############################################################################
(>&2 echo "Remediating rule 24/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-verification'")


firefox_cfg="mozilla.cfg"
value="\"Ask Every Time\""
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Make sure the Firefox .cfg file exists and has the appropriate permissions
        if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
            echo "//  IMPORTANT: Start your code on the 2nd line" > "${firefox_dir}/${firefox_cfg}"
            chmod 644 "${firefox_dir}/${firefox_cfg}"
        elif ! head -1 "${firefox_dir}/${firefox_cfg}" | grep -q "^//"; then
            sed -i '1 i\// IMPORTANT: Start your code on the 2nd line' "${firefox_dir}/${firefox_cfg}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^lockPref("security.default_personal_cert", ' "${firefox_dir}/${firefox_cfg}"; then
            
            sed -i 's/lockPref("security.default_personal_cert".*/lockPref("security.default_personal_cert", '"$value)"';/g' "${firefox_dir}/${firefox_cfg}"
        else
            echo 'lockPref("security.default_personal_cert", '"$value"');' >> "${firefox_dir}/${firefox_cfg}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-verification'

###############################################################################
# BEGIN fix (25 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-lock_settings_config_file'
###############################################################################
(>&2 echo "Remediating rule 25/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-lock_settings_config_file'")


value="\"mozilla.cfg\""
firefox_js="local-settings.js"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"
firefox_pref="defaults/pref"
firefox_preferences="defaults/preferences"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Different versions of Firefox have different preferences directories, check for them and set the right one
        if [ -d "${firefox_dir}/${firefox_preferences}" ] ; then
            firefox_pref_dir="${firefox_dir}/${firefox_preferences}"
        elif [ -d "${firefox_dir}/${firefox_pref}" ] ; then
            firefox_pref_dir="${firefox_dir}/${firefox_pref}"
        else
            firefox_pref_dir="${firefox_dir}/${firefox_preferences}"
            mkdir -p "${firefox_pref_dir}"
            chmod 755 "${firefox_pref_dir}"
        fi

        # Make sure the Firefox .js file exists and has the appropriate permissions
        if ! [ -f "${firefox_pref_dir}/${firefox_js}" ] ; then
            touch "${firefox_pref_dir}/${firefox_js}"
            chmod 644 "${firefox_pref_dir}/${firefox_js}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^pref("general.config.filename", ' "${firefox_pref_dir}/${firefox_js}"; then
            
            sed -i 's/pref("general.config.filename".*/pref("general.config.filename", '"$value)"';/g' "${firefox_pref_dir}/${firefox_js}"
        else
            echo 'pref("general.config.filename", '"$value"');' >> "${firefox_pref_dir}/${firefox_js}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-lock_settings_config_file'

###############################################################################
# BEGIN fix (26 / 26) for 'xccdf_org.ssgproject.content_rule_firefox_preferences-lock_settings_obscure'
###############################################################################
(>&2 echo "Remediating rule 26/26: 'xccdf_org.ssgproject.content_rule_firefox_preferences-lock_settings_obscure'")


value="0"
firefox_js="local-settings.js"
firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"
firefox_pref="defaults/pref"
firefox_preferences="defaults/preferences"

# Check the possible Firefox install directories
for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
        # Different versions of Firefox have different preferences directories, check for them and set the right one
        if [ -d "${firefox_dir}/${firefox_preferences}" ] ; then
            firefox_pref_dir="${firefox_dir}/${firefox_preferences}"
        elif [ -d "${firefox_dir}/${firefox_pref}" ] ; then
            firefox_pref_dir="${firefox_dir}/${firefox_pref}"
        else
            firefox_pref_dir="${firefox_dir}/${firefox_preferences}"
            mkdir -p "${firefox_pref_dir}"
            chmod 755 "${firefox_pref_dir}"
        fi

        # Make sure the Firefox .js file exists and has the appropriate permissions
        if ! [ -f "${firefox_pref_dir}/${firefox_js}" ] ; then
            touch "${firefox_pref_dir}/${firefox_js}"
            chmod 644 "${firefox_pref_dir}/${firefox_js}"
        fi

        # If the key exists, change it. Otherwise, add it to the config_file.
        if LC_ALL=C grep -m 1 -q '^pref("general.config.obscure_value", ' "${firefox_pref_dir}/${firefox_js}"; then
            
            sed -i 's/pref("general.config.obscure_value".*/pref("general.config.obscure_value", '"$value)"';/g' "${firefox_pref_dir}/${firefox_js}"
        else
            echo 'pref("general.config.obscure_value", '"$value"');' >> "${firefox_pref_dir}/${firefox_js}"
        fi
    fi
done

# END fix for 'xccdf_org.ssgproject.content_rule_firefox_preferences-lock_settings_obscure'

