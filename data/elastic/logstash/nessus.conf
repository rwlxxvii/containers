input {
	file {
	#tried binding the directory to a nessus container, but it puts all reports and not just .nessus in there
	#recommend pulling nessus files regularly into a directory for logstash to ingest
	#utilize nessus api to pull nessus files from scans, then some gnarly dashboards in kibana.
	path => "/home/nessussvc/nessus_reports/*"
	    start_position => "beginning"
        codec => multiline {
            pattern => "^<\?/NessusClientData_v2 .*\>"
            negate => "true"
            what => "previous"
        }
	tags => "nessus"
    	type => "nessus"
	}
}

filter {
##interpret the message as XML
    if [type] == "nessus" {
        xml {
            source => "message"
            store_xml => false

            xpath => [
                "/NessusClientData_v2/Report/@name", "report_name",
                "/NessusClientData_v2/Report/ReportHost/text()", "report_host",
                "/NessusClientData_v2/Report/ReportHost/ReportItem/text()", "report_item",
                "/NessusClientData_v2/Report/ReportHost/@name", "report_host_name",
                "/NessusClientData_v2/Report/ReportHost/HostProperties/tag[@name='HOST_START']/text()", "report_host_start",
                "/NessusClientData_v2/Report/ReportHost/HostProperties/tag[@name='HOST_END']/text()", "report_host_end",
                "/NessusClientData_v2/Report/ReportHost/ReportItem/@port", "report_item_port"
            ]
        }
        mutate {
            convert => {
                "report_item_severity" => "integer"
            }

        }
        date {
            match => ["report_host_start", "EEE MMM dd HH:mm:ss yyyy"]
            target => "report_host_start"
            locale => "en_US"
        }
        date {
            match => ["report_host_end", "EEE MMM dd HH:mm:ss yyyy"]
            target => "report_host_end"
            locale => "en_US"
        }
    }
}

output {
    	elasticsearch { 
    		hosts => ["https://192.168.0.2:9200"]
    		index => "nessus-data-%{+YYYY.MM.dd}"
    		user => elastic
      		password => ${ELASTIC_PASSWORD:-}
    	}
    	stdout { codec => rubydebug }
}
