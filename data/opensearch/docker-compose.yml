version: '3'

volumes:
  opensearch-data1:
  opensearch-data2:

networks:
  opensearch-net:

#secrets:
#  ca.crt:
#    file: ./secrets/ca/ca/ca.crt
#  opensearch.keystore:
#    file: ./secrets/.keystore
#  opensearch-ca.p12:
#    file: ./secrets/ca/opensearch-ca.p12
#  opensearch01.key:
#    file: ./secrets/certs/opensearch/opensearch01.key
#  opensearch01.cert:
#    file: ./secrets/certs/opensearch/opensearch01.crt
#  opensearch02.key:
#    file: ./secrets/certs/opensearch/opensearch02.key
#  opensearch02.cert:
#    file: ./secrets/certs/opensearch/opensearch02.crt
#  dashboards.key:
#    file: ./secrets/certs/dashboards/dashboards.key
#  dashboards.cert:
#    file: ./secrets/certs/dashboards/dashboards.crt
#  data-prepper.pkcs8.key:
#    file: ./secrets/certs/data-prepper/data-prepper.pkcs8.key
#  data-prepper.key:
#    file: ./secrets/certs/data-prepper/data-prepper.key
#  data-prepper.p12:
#    file: ./secrets/keystore/data-prepper/data-prepper.p12
#  data-prepper.cert:
#    file: ./secrets/certs/data-prepper/data-prepper.crt
#  logstash.pkcs8.key:
#    file: ./secrets/certs/logstash/logstash.pkcs8.key
#  logstash.key:
#    file: ./secrets/certs/logstash/logstash.key
#  logstash.p12:
#    file: ./secrets/keystore/logstash/logstash.p12
#  logstash.cert:
#    file: ./secrets/certs/logstash/logstash.crt

services:
  setup:
    build:
      context: setup/
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASSWORD:-}
      DATAPREPPER_INTERNAL_PASSWORD: ${DATAPREPPER_INTERNAL_PASSWORD:-}
      DASHBOARDS_SYSTEM_PASSWORD: ${DASHBOARDS_SYSTEM_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - opensearch-net
    depends_on:
      - opensearch-node1
      
  opensearch-node1:
    build:
      context: /opensearch
      args:
        OPENSEARCH_VERSION: ${OPENSEARCH_VERSION}
    container_name: opensearch-node1
    hostname: opensearch-node01.io
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      cluster.name: opensearch-cluster
      node.name: opensearch-node1
      http.cors.enabled: true
      http.cors.allow-origin: "*"
      http.cors.allow-methods: "OPTIONS, HEAD, GET, POST, PUT, DELETE"
      http.cors.allow-headers: "kbn-version, Origin, X-Requested-With, Content-Type, Accept, Engaged-Auth-Token Authorization"
      discovery.seed_hosts: opensearch-node1,opensearch-node2
      cluster.initial_master_nodes: opensearch-node1,opensearch-node2
      bootstrap.memory_lock: true # along with the memlock settings below, disables swapping
      cluster.routing.allocation.disk.threshold_enabled: false
      cluster.routing.allocation.node_initial_primaries_recoveries: 8
      indices.query.bool.max_clause_count: 4096
      logger.level: WARN
      MAX_LOCKED_MEMORY: unlimited
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data:Z
      # modify config before composing up
      - opensearch/config/opensearch.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/opensearch.yml:ro
#    secrets:
#      - source: opensearch.keystore
#        target: /usr/share/opensearch/config/opensearch.keystore
#      - source: ca.crt
#        target: /usr/share/opensearch/config/ca.crt
#      - source: opensearch01.cert
#        target: /usr/share/opensearch/config/opensearch01.crt
#      - source: opensearch01.key
#        target: /usr/share/opensearch/config/opensearch01.key
    ports:
      - "9200:9200"
      - "9600:9600" # required for Performance Analyzer
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -sf --insecure https://$OPENSEARCH_USERNAME:${OPENSEARCH_PASSWORD:-}@localhost:9200/_cat/health | grep -ioE 'green|yellow' || echo 'not green/yellow cluster status'"]
    networks:
      - opensearch-net
      
  opensearch-node2:
    build:
      context: /opensearch
      args:
        OPENSEARCH_VERSION: ${OPENSEARCH_VERSION}
    container_name: opensearch-node2
    hostname: opensearch-node02.io
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      cluster.name: opensearch-cluster
      node.name: opensearch-node2
      http.cors.enabled: true
      http.cors.allow-origin: "*"
      http.cors.allow-methods: "OPTIONS, HEAD, GET, POST, PUT, DELETE"
      http.cors.allow-headers: "kbn-version, Origin, X-Requested-With, Content-Type, Accept, Engaged-Auth-Token Authorization"
      discovery.seed_hosts: opensearch-node1,opensearch-node2
      cluster.initial_master_nodes: opensearch-node1,opensearch-node2
      bootstrap.memory_lock: true
      cluster.routing.allocation.disk.threshold_enabled: false
      cluster.routing.allocation.node_initial_primaries_recoveries: 8
      indices.query.bool.max_clause_count: 4096
      logger.level: WARN
      MAX_LOCKED_MEMORY: unlimited
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data:Z
      # modify config before composing up
      - opensearch/config/opensearch.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/opensearch.yml:ro
#    secrets:
#      - source: opensearch.keystore
#        target: /usr/share/opensearch/config/opensearch.keystore
#      - source: ca.crt
#        target: /usr/share/opensearch/config/ca.crt
#      - source: opensearch02.cert
#        target: /usr/share/opensearch/config/opensearch02.crt
#      - source: opensearch02.key
#        target: /usr/share/opensearch/config/opensearch02.key
    ports:
      - "9200:9200"
      - "9600:9600" # required for Performance Analyzer
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -sf --insecure https://$OPENSEARCH_USERNAME:${OPENSEARCH_PASSWORD:-}@localhost:9200/_cat/health | grep -ioE 'green|yellow' || echo 'not green/yellow cluster status'"]
    networks:
      - opensearch-net
    depends_on:
      - opensearch-node1
      
  opensearch-dashboards:
    build:
      context: /dashboards
      args:
        OPENSEARCH_VERSION: ${OPENSEARCH_VERSION}
    container_name: opensearch-dashboards
    hostname: opensearch-dashboards.io
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
    # modify before composing up
      - dashboards/config/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml:ro
    ports:
      - 5601:5601
    expose:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # must be a string with no spaces when specified as an environment variable
#    secrets:
#      - source: ca.crt
#        target: /usr/share/opensearch-dashboards/config/ca.crt
#      - source: dashboards.cert
#        target: /usr/share/opensearch-dashboards/config/dashboards.crt
#      - source: dashboards.key
#        target: /usr/share/opensearch-dashboards/config/dashboards.key
    networks:
      - opensearch-net
    depends_on:
      - opensearch-node2

  data-prepper:
    build:
      context: /data-prepper
    container_name: data-prepper
    hostname: data-prepper.io
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./data-prepper/config/data-prepper-config.yml:/usr/share/data-prepper/config/data-prepper-config.yaml:ro
      - ./data-prepper/config/pipelines.yaml:/usr/share/data-prepper/pipelines/pipelines.yaml:ro
      # generate pkcs12 format file from opensearch CA
      - ./data-prepper/config/keystore.p12:/usr/share/data-prepper/keystore.p12:ro
    ports:
      - "4900:4900"
      - "21890:21890"
    environment:
      DATAPREPPER_INTERNAL_PASSWORD: ${DATAPREPPER_INTERNAL_PASSWORD:-}
#    secrets:
#      - source: ca.crt
#        target: /usr/share/data-prepper/config/ca.crt
#      - source: data-prepper.cert
#        target: /usr/share/data-prepper/config/data-prepper.crt
#      - source: data-prepper.key
#        target: /usr/share/data-prepper/config/data-prepper.key
#      - source: data-prepper.pkcs8.key
#        target: /usr/share/data-prepper/config/data-prepper.pkcs8.key
#      - source: data-prepper.p12
#        target: /usr/share/data-prepper/config/data-prepper.p12
    healthcheck:
      test: ["CMD", "curl", "-s" ,"-XGET", "http://127.0.0.1:21890"]
    networks:
      - opensearch-net
    depends_on:
      - opensearch-node1

  logstash:
    build:
      context: logstash/
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./logstash/config:/usr/share/logstash/config/logstash.yml:Z
      - ./logstash/pipelines:/usr/share/logstash/pipelines:Z
      - ./logstash/ruby:/usr/share/logstash/ruby:Z
      - ./logstash/patterns:/usr/share/logstash/patterns:Z
    ports:
      #add ports here if sending logs this way from external sources
      - "50000:50000"
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
#    secrets:
#      - source: ca.crt
#        target: /usr/share/logstash/config/ca.crt
#      - source: logstash.cert
#        target: /usr/share/logstash/config/logstash.crt
#      - source: logstash.key
#        target: /usr/share/logstash/config/logstash.key
#      - source: logstash.pkcs8.key
#        target: /usr/share/logstash/config/logstash.pkcs8.key
#      - source: logstash.p12
#        target: /usr/share/logstash/config/logstash.p12
    healthcheck:
      test: ["CMD", "curl", "-s" ,"-XGET", "http://127.0.0.1:9600"]
    networks:
      - opensearch-net
    depends_on:
      - opensearch-node1
