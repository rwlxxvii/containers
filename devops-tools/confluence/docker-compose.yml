version: '3'

volumes:
  confluence-postgres:
  confluence-data:
  confluence-data-backups:
  confluence-postgres-backups:
  traefik-certificates:

networks:
  confluence:
    driver: bridge
  traefik:
    external: true

x-common-vars-apps: &common-vars-apps
  networks:
    - confluence
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

services:
  postgres:
    <<: *common-vars-apps
    image: docker.io/bitnami/postgresql:latest
    container_name: postgres-onedev
    hostname: postgres-onedev.dev.io
    ports:
      - 5432:5432
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
      POSTGRESQL_REPLICATION_USER: ${POSTGRESQL_REPLICATION_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRESQL_REPLICATION_PASSWORD}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - confluence-postgres:/bitnami/postgresql:z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRESQL_DATABASE} -U $${POSTGRESQL_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    deploy:
      mode: global
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M

  confluence:
    image: docker.io/atlassian/confluence-server:latest
    container_name: confluence
    hostname: confluence.io
    volumes:
      - confluence-data:/var/atlassian/application-data/confluence:z
    environment:
      JVM_MINIMUM_MEMORY: 8G
      JVM_MAXIMUM_MEMORY: 8G
      ATL_PROXY_NAME: confluence-alt.io
      ATL_PROXY_PORT: 443
      ATL_TOMCAT_SCHEME: https
      ATL_TOMCAT_SECURE: 'true'
    ports:
      - "8091:8091"
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    depends_on:
      postgres:
        condition: service_healthy
      traefik:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.confluence.rule=Host(`confluence.io`)"
        - "traefik.http.routers.confluence.service=confluence"
        - "traefik.http.routers.confluence.entrypoints=websecure"
        - "traefik.http.services.confluence.loadbalancer.server.port=8091"
        - "traefik.http.routers.confluence.tls=true"
        - "traefik.http.routers.confluence.tls.certresolver=letsencrypt"
        - "traefik.http.services.confluence.loadbalancer.passhostheader=true"
        - "traefik.http.routers.confluence.middlewares=compresstraefik"
        - "traefik.http.middlewares.compresstraefik.compress=true"
      resources:
        limits:
          memory: 8192M
        reservations:
          memory: 4096M

  traefik:
    <<: *common-vars-apps
    image: docker.io/traefik:latest
    container_name: traefik
    hostname: traefik.io
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--entryPoints.ping.address=:8082"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # Email for Let's Encrypt (replace with yours)
      - "--certificatesresolvers.letsencrypt.acme.email=youremail@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # systemctl --user enable podman.socket
      #- $XDG_RUNTIME_DIR/podman/podman.sock:/var/run/docker.sock:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/etc/traefik/acme:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`traefik.io`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
        - "traefik.http.routers.dashboard.tls=true"
        - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
        - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
        - "traefik.http.routers.dashboard.middlewares=authtraefik"
        # Passwords must be encoded using MD5, SHA1, or BCrypt
        - "traefik.http.middlewares.authtraefik.basicauth.users=traefikadmin:$$hashed$$pass$$here"
        - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
        - "traefik.http.routers.http-catchall.entrypoints=web"
        - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M
   
  backups:
    <<: *common-vars-apps
    image: docker.io/bitnami/postgresql:latest
    container_name: psql-backup
    hostname: confluence-backup-psql.io
    command: 
      - sh
      - -c
      - |
        sleep 30m
        && while true; do
        pg_dump
        -h postgres-confluence.io
        -p 5432
        -d "${POSTGRESQL_DATABASE}"
        -U "${POSTGRESQL_USERNAME}" | gzip > /srv/confluence-postgres/backups/confluence-postgres-backup-$$(date "+%Y-%m-%d_%H-%M").gz
        && tar -zcpf /srv/confluence-application-data/backups/confluence-application-data-backup-$$(date "+%Y-%m-%d_%H-%M").tar.gz /var/atlassian/application-data/confluence
        && find /srv/confluence-postgres/backups -type f -mtime +7 | xargs rm -f
        && find /srv/confluence-application-data/backups -type f -mtime +7 | xargs rm -f;
        sleep 24h; done
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - confluence-postgres:/bitnami/postgresql:z
      - confluence-data:/var/atlassian/application-data/confluence:z
      - confluence-data-backups:/srv/confluence-application-data/backups:z
      - confluence-postgres-backups:/srv/confluence-postgres/backups:Z
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: ${POSTGRESQL_REPLICATION_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRESQL_REPLICATION_PASSWORD}
      POSTGRESQL_MASTER_HOST: postgres-grafana.io
      POSTGRESQL_MASTER_PORT_NUMBER: 5432
    depends_on:
      postgres:
        condition: service_healthy
      confluence:
        condition: service_healthy
    deploy:
      mode: global
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M
