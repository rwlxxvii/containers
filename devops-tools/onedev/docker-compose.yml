version: '3.8'

volumes:
  onedev_data:
  onedev_db:
  postgresql_data:
  onedev-postgres-backups:
  onedev-data-backups:
  
networks:
  onedev:

x-common-vars-apps: &common-vars-apps
  networks:
    - onedev
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

services:
  postgres:
    <<: *common-vars-apps
    #build:
      #context: ./postgres
      #dockerfile: Dockerfile
    # I use bitnami's image, but you can build locally using the postgres directory. (above)
    image: docker.io/bitnami/postgresql:latest
    container_name: postgres-onedev
    hostname: postgres-onedev.dev.io
    ports:
      - 5432:5432
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
      POSTGRESQL_REPLICATION_USER: ${POSTGRESQL_REPLICATION_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRESQL_REPLICATION_PASSWORD}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - onedev_data:/opt/onedev:z
      - onedev_db:/bitnami/postgresql:z
      - postgresql_data:/var/lib/postgresql/data:Z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRESQL_DATABASE} -U $${POSTGRESQL_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    deploy:
      mode: global
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M

  onedev:
    <<: *common-vars-apps
    build:
      context: .
      dockerfile: Dockerfile
    container_name: onedev-main
    hostname: onedev.dev.io
    volumes:
      # run as user onedev, not as root.
      # systemctl --user enable podman.socket
      #- $XDG_RUNTIME_DIR/podman/podman.sock:/var/run/docker.sock:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /home/onedev/data:/opt/onedev:z
    ports:
      - "6610:6610"
      - "6611:6611"
    environment:
      - initial_user=${ONEDEV_USER}
      - initial_password=${ONEDEV_PASS}
      - initial_email=${ONEDEV_EMAIL}
      - initial_server_url=https://onedev.dev.io
      - hibernate_dialect=io.onedev.server.persistence.PostgreSQLDialect
      - hibernate_connection_driver_class=org.postgresql.Driver
      - hibernate_connection_url=jdbc:postgresql://postgres-onedev.dev.io:5432/"${POSTGRESQL_DATABASE}"
      - hibernate_connection_username=${POSTGRESQL_USER}
      - hibernate_connection_password=${POSTGRESQL_PASSWORD}
    depends_on:
      postgres:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "wget", "-O-", "https://onedev.dev.io:6610"]
      interval: 3s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M

  docker-socket-proxy:
    image: docker.io/tecnativa/docker-socket-proxy
    container_name: docker-socket-proxy 
    hostname: docker-socket-proxy
    privileged: true
    restart: on-failure
    environment:
      - SERVICES=1
      - TASKS=1
      - NETWORKS=1
      - NODES=1
      - BUILD=1
      - IMAGES=1
      - GRPC=1
      - CONTAINERS=1
      - PLUGINS=1
      - SYSTEM=1
      - VOLUMES=1
      - INFO=1
      - DISTRIBUTION=1
      - POST=1
      - AUTH=1
      - SECRETS=1
      - SWARM=1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      #- $XDG_RUNTIME_DIR/podman/podman.sock:/var/run/docker.sock:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - .env
    networks:
      - onedev
    deploy:
      mode: global
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M

  backups:
    <<: *common-vars-apps
    image: docker.io/bitnami/postgresql:latest
    container_name: onedev-psql-backup
    hostname: onedev-psql-backup.dev.io
    command: 
      - sh
      - -c
      - |
        sleep 30m
        while true; do
        pg_dump
        -h postgres-onedev.dev.io
        -p 5432
        -d "${POSTGRESQL_DATABASE}"
        -U "${POSTGRESQL_USER}" | gzip > /srv/onedev-postgres/backups/onedev-postgres-backup-$$(date "+%Y-%m-%d_%H-%M").gz
        tar -zcpf /srv/onedev-application-data/backups/onedev-application-data-backup-$$(date "+%Y-%m-%d_%H-%M").tar.gz /opt/onedev/
        find /srv/onedev-postgres/backups -type f -mtime +7 | xargs rm -f
        find /srv/onedev-application-data/backups -type f -mtime +7 | xargs rm -f;
        sleep 24h; done
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - onedev_db:/bitnami/postgresql:z
      - onedev_data:/opt/onedev/:z
      - onedev-data-backups:/srv/onedev-application-data/backups:Z
      - onedev-postgres-backups:/srv/onedev-postgres/backups:Z
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: ${POSTGRESQL_REPLICATION_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRESQL_REPLICATION_PASSWORD}
      POSTGRESQL_MASTER_HOST: postgres-onedev.dev.io
      POSTGRESQL_MASTER_PORT_NUMBER: 5432
    depends_on:
      postgres:
        condition: service_healthy
      onedev:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRESQL_DATABASE} -U $${POSTGRESQL_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    deploy:
      mode: global
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 512M