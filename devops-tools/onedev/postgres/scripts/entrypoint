#!/bin/bash
set -Eeuo pipefail

first=${1:-}
[ "$first" == "initdb" ] && exec /scripts/initdb "${@:2}"
[ "$first" == "standby" ] && exec /scripts/standby "${@:2}"
[ "$first" == "recover" ] && exec /scripts/recover "${@:2}"
[ "$first" == "backup" ] && exec /scripts/backup "${@:2}"
[ "$first" == "upgrade" ] && exec /scripts/upgrade "${@:2}"

# Run the postgres commands as postgres user
if [ "$first" == "psql" ] || [ "$first" == "postgres" ] || [ "$first" == "pg_ctl" ] || [ "$first" == "pg_autoctl" ] || [ "$first" == "pg_basebackup" ]; then
  # Create the database if we run the `postgres` command but a database is not present
  if [ "$first" == "postgres" ] && [ ! -s "$PGDATA/PG_VERSION" ]; then /scripts/initdb; fi

  [ "$(id -u)" == "1000" ] && exec "$@"
  exec su-exec postgres "$@"
fi

exec "$@"
