#!/bin/bash
set -Eeo pipefail
if [ "$(id -u)" != "1000" ] ; then exec su-exec postgres "$BASH_SOURCE" "$@"; fi

source /usr/local/bin/docker-entrypoint.sh

if [ "$POSTGRES_HOST_AUTH_METHOD" == "" ] && [ "$POSTGRES_PASSWORD" == "" ]; then
  POSTGRES_HOST_AUTH_METHOD=trust
fi

docker_setup_env
if [ "${#POSTGRES_PASSWORD}" -ge 100 ]; then
  >&2 printf '

    WARNING: The supplied POSTGRES_PASSWORD is 100+ characters.
      This will not work if used via PGPASSWORD with "psql".
      https://www.postgresql.org/message-id/flat/E1Rqxp2-0004Qt-PL%40wrigleys.postgresql.org (BUG #6412)
      https://github.com/docker-library/postgres/issues/507

  '
fi

docker_create_db_directories

INIT_FILES="$(ls /var/lib/postgresql/initdb.d/* 2> /dev/null ||:)"
if ! docker_init_database_dir; then
  >&2 echo -------------------------
  >&2 echo CURRENT FILES IN \$PGDATA
  >&2 ls -lisa $PGDATA
  >&2 echo -------------------------
  exit 1
fi

/scripts/tuneconfig

if [ "${#INIT_FILES}" -gt 0 ]; then
  # PGPASSWORD is required for psql when authentication is required for 'local' connections via pg_hba.conf and is otherwise harmless
  # e.g. when '--auth=md5' or '--auth-local=md5' is used in POSTGRES_INITDB_ARGS
  export PGPASSWORD="${PGPASSWORD:-$POSTGRES_PASSWORD}"
  docker_temp_server_start "$@"

  docker_setup_db
  docker_process_init_files $INIT_FILES

  docker_temp_server_stop
  unset PGPASSWORD
fi

>&2 printf '

PostgreSQL init process complete; ready for start up.

'
